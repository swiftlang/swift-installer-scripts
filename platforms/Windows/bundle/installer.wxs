<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs" xmlns:bal="http://wixtoolset.org/schemas/v4/wxs/bal">
  <Bundle
    Name="!(loc.BundleName) $(ProductVersion)"
    Version="$(ProductVersion)"
    IconSourceFile="logo.ico"
    Manufacturer="!(loc.ManufacturerName)"
    DisableModify="yes"
    Compressed="$(IsBundleCompressed)"
    UpgradeCode="$(BundleUpgradeCode)">

    <!-- Avoid spaces in log file names, for ease of log spelunking. -->
    <Log Prefix="SwiftToolKit_$(ProductVersion)" />

    <BootstrapperApplication>
      <bal:WixStandardBootstrapperApplication
        LicenseUrl="https://www.swift.org/LICENSE.txt"
        Theme="hyperlinkSidebarLicense"
        LocalizationFile="..\shared\swift.en-us.wxl"
        ThemeFile="theme.xml" />
      <Payload SourceFile="swift_side.png" />
    </BootstrapperApplication>

    <!--
    Keep `InstallRoot` in sync with the INSTALLROOT definition in shared.wxs.
    The bundle variable here will overwrite the default authored in the MSI
    packages, but avoid the confusion if the default directory should change.
    -->
    <Variable Name="InstallRoot" bal:Overridable="yes" Type="formatted" Persisted="yes"
      Value="[LocalAppDataFolder]Programs\Swift" />

    <Variable Name="OptionsInstallBLD" Value="1" />
    <Variable Name="OptionsInstallCLI" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallDBG" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallIDE" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallRTL" Value="1" />

    <Variable Name="OptionsInstallUtilities" bal:Overridable="yes" Persisted="yes" Value="1" />

    <Variable Name="OptionsInstallWindowsPlatform" bal:Overridable="yes" Persisted="yes" Value="1" />

    <Variable Name="OptionsInstallWindowsSDKX86" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallWindowsRedistX86" bal:Overridable="yes" Persisted="yes" Value="1" />

    <Variable Name="OptionsInstallWindowsSDKAMD64" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallWindowsRedistAMD64" bal:Overridable="yes" Persisted="yes" Value="1" />

    <Variable Name="OptionsInstallWindowsSDKARM64" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallWindowsRedistARM64" bal:Overridable="yes" Persisted="yes" Value="1" />

    <Variable Name="OptionsInstallAndroidPlatform" bal:Overridable="yes" Persisted="yes" Value="1" />

    <Variable Name="OptionsInstallAndroidSDKARM64" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallAndroidSDKAMD64" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallAndroidSDKARM" bal:Overridable="yes" Persisted="yes" Value="0" />
    <Variable Name="OptionsInstallAndroidSDKX86" bal:Overridable="yes" Persisted="yes" Value="0" />

    <Variable Name="OptionsInstallToolchain" Value="1" />
    <Variable Name="OptionsInstallAssertsToolchain" bal:Overridable="yes" Persisted="yes" Value="1" />
    <Variable Name="OptionsInstallNoAssertsToolchain" bal:Overridable="yes" Persisted="yes" Value="0" />

    <?if $(IncludeNoAsserts) == True?>
      <Variable Name="OptionsIncludeNoAsserts" bal:Overridable="yes" Persisted="yes" Value="1" />
    <?else ?>
      <Variable Name="OptionsIncludeNoAsserts" bal:Overridable="yes" Persisted="yes" Value="0" />
    <?endif?>

    <!--
    For the online bundle, we need to provide a download URL for each package and its .cabs.
    (The SourceFile attribute is also required, both for the offline bundle and for Burn
    to get the hash of the packages. Note that the packages and .cabs available for
    download must exactly match the ones used when building the bundle. Burn validates
    downloads by their hashes.)

    `BaseReleaseDownloadUrl` is a preprocessor variable that provides the URL to the
    directory containing the packages for that bundle. So, for example, for the bundle at:

    https://download.swift.org/swift-5.8.1-release/windows10/swift-5.8.1-RELEASE/swift-5.8.1-RELEASE-windows10.exe

    `BaseReleaseDownloadUrl` would be `https://download.swift.org/swift-5.8.1-release/windows10/swift-5.8.1-RELEASE`.

    `{2}` is the file name of the payload.

    Schema doc is at https://wixtoolset.org/docs/schema/wxs/msipackage/.
    -->

    <Chain>
      <MsiPackage
        SourceFile="!(bindpath.bld.asserts)\bld.asserts.msi"
        InstallCondition="OptionsInstallAssertsToolchain = 1"
        DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
        <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
        <MsiProperty Name="ADDTOOLCHAINTOPATH" Value="1"/>
      </MsiPackage>

      <?if $(IncludeNoAsserts) == True?>
        <MsiPackage
          SourceFile="!(bindpath.bld.noasserts)\bld.noasserts.msi"
          InstallCondition="OptionsInstallNoAssertsToolchain = 1"
          DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
          <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
          <MsiProperty Name="ADDTOOLCHAINTOPATH" Condition="OptionsInstallAssertsToolchain = 0" Value="1" />
        </MsiPackage>
      <?endif?>

      <MsiPackage
        SourceFile="!(bindpath.cli.asserts)\cli.asserts.msi"
        InstallCondition="OptionsInstallCLI = 1 and OptionsInstallAssertsToolchain = 1"
        DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
        <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
      </MsiPackage>

      <?if $(IncludeNoAsserts) == True?>
        <MsiPackage
          SourceFile="!(bindpath.cli.noasserts)\cli.noasserts.msi"
          InstallCondition="OptionsInstallCLI = 1 and OptionsInstallNoAssertsToolchain = 1"
          DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
          <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
        </MsiPackage>
      <?endif?>

      <MsiPackage
        SourceFile="!(bindpath.dbg.asserts)\dbg.asserts.msi"
        InstallCondition="OptionsInstallDBG = 1 and OptionsInstallAssertsToolchain = 1"
        DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
        <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
      </MsiPackage>

      <?if $(IncludeNoAsserts) == True?>
        <MsiPackage
          SourceFile="!(bindpath.dbg.noasserts)\dbg.noasserts.msi"
          InstallCondition="OptionsInstallDBG = 1 and OptionsInstallNoAssertsToolchain = 1"
          DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
          <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
        </MsiPackage>
      <?endif?>

      <MsiPackage
        SourceFile="!(bindpath.ide.asserts)\ide.asserts.msi"
        InstallCondition="OptionsInstallIDE = 1 and OptionsInstallAssertsToolchain = 1"
        DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
        <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
      </MsiPackage>

      <?if $(IncludeNoAsserts) == True?>
        <MsiPackage
          SourceFile="!(bindpath.ide.noasserts)\ide.noasserts.msi"
          InstallCondition="OptionsInstallIDE = 1 and OptionsInstallNoAssertsToolchain = 1"
          DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
          <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
        </MsiPackage>
      <?endif?>

<?if $(IncludeLegacySDK) == True?>
      <MsiPackage
        SourceFile="!(bindpath.rtl)\rtl.msi"
        DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
        <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
        <MsiProperty Name="INSTALLUTILITIES" Value="[OptionsInstallUtilities]" />
      </MsiPackage>
<?else?>
      <MsiPackage
        SourceFile="!(bindpath.rtl.shared)\rtl.$(ProductArchitecture).msi"
        DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
        <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />
        <MsiProperty Name="INSTALLUTILITIES" Value="[OptionsInstallUtilities]" />
      </MsiPackage>
<?endif?>

      <?if $(IncludeAndroid) == True?>
        <MsiPackage
          SourceFile="!(bindpath.platform.android)\android.msi"
          InstallCondition="OptionsInstallAndroidPlatform = 1"
          DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
          <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />

          <MsiProperty Name="INSTALLARM64SDK" Value="[OptionsInstallAndroidSDKARM64]" />
          <MsiProperty Name="INSTALLAMD64SDK" Value="[OptionsInstallAndroidSDKAMD64]" />
          <MsiProperty Name="INSTALLARMSDK" Value="[OptionsInstallAndroidSDKARM]" />
          <MsiProperty Name="INSTALLX86SDK" Value="[OptionsInstallAndroidSDKX86]" />
        </MsiPackage>
      <?endif?>

      <?if $(IncludeWindows) == True?>
        <MsiPackage
          SourceFile="!(bindpath.platform.windows)\windows.msi"
          InstallCondition="OptionsInstallWindowsPlatform = 1"
          DownloadUrl="$(BaseReleaseDownloadUrl)/{2}">
          <MsiProperty Name="INSTALLROOT" Value="[InstallRoot]" />

          <MsiProperty Name="INSTALLARM64SDK" Value="[OptionsInstallWindowsSDKARM64]" />
          <MsiProperty Name="INSTALLARM64REDIST" Value="[OptionsInstallWindowsRedistARM64]" />

          <MsiProperty Name="INSTALLAMD64SDK" Value="[OptionsInstallWindowsSDKAMD64]" />
          <MsiProperty Name="INSTALLAMD64REDIST" Value="[OptionsInstallWindowsRedistAMD64]" />

          <MsiProperty Name="INSTALLX86SDK" Value="[OptionsInstallWindowsSDKX86]" />
          <MsiProperty Name="INSTALLX86REDIST" Value="[OptionsInstallWindowsRedistX86]" />
        </MsiPackage>
      <?endif?>
     </Chain>
  </Bundle>
</Wix>
