<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs" xmlns:util="http://wixtoolset.org/schemas/v4/wxs/util">
  <Fragment>
    <StandardDirectory Id="LocalAppDataFolder">
      <Directory Name="Programs">
        <Directory Id="INSTALLROOT" Name="Swift" />
      </Directory>
    </StandardDirectory>
  </Fragment>

  <Fragment>
    <DirectoryRef Id="INSTALLROOT">
      <Directory Name="Platforms">
        <Directory Id="PlatformsVersioned" Name="$(ProductVersion)" />
      </Directory>
    </DirectoryRef>
  </Fragment>

  <Fragment>
    <DirectoryRef Id="INSTALLROOT">
      <Directory Name="Redistributables">
        <Directory Id="RedistVersion" Name="$(ProductVersion)" />
      </Directory>
    </DirectoryRef>
  </Fragment>

  <Fragment>
    <DirectoryRef Id="INSTALLROOT">
      <Directory Name="Runtimes">
        <Directory Id="RuntimesVersioned" Name="$(ProductVersion)">
          <Directory Name="usr">
            <Directory Id="runtimes_usr_bin" Name="bin" />
          </Directory>
        </Directory>
      </Directory>
    </DirectoryRef>
  </Fragment>

  <Fragment>
    <DirectoryRef Id="INSTALLROOT">
        <Directory Name="Toolchains">
          <Directory Id="ToolchainVersionedAsserts" Name="$(ProductVersion)+Asserts">
            <Directory Id="toolchain_asserts_usr" Name="usr">
              <Directory Id="toolchain_asserts_usr_bin" Name="bin" />
              <Directory Id="toolchain_asserts_usr_include" Name="include" />
              <Directory Id="toolchain_asserts_usr_lib" Name="lib">
                <Directory Id="toolchain_asserts_usr_lib_clang" Name="clang" />
                <Directory Id="toolchain_asserts_usr_lib_swift" Name="swift">
                  <Directory Id="toolchain_asserts_usr_lib_swift_clang" Name="clang" />
                </Directory>
                <Directory Id="toolchain_asserts_usr_lib_swift_static" Name="swift_static">
                  <Directory Id="toolchain_asserts_usr_lib_swift_static_clang" Name="clang" />
                </Directory>
              </Directory>
              <Directory Id="toolchain_asserts_usr_share" Name="share">
                <Directory Id="toolchain_asserts_usr_share_docc" Name="docc">
                  <Directory Id="toolchain_asserts_usr_share_docc_render" Name="render" />
                </Directory>
              </Directory>
            </Directory>
          </Directory>
          <Directory Id="ToolchainVersionedNoAsserts" Name="$(ProductVersion)+NoAsserts">
            <Directory Id="toolchain_noasserts_usr" Name="usr">
              <Directory Id="toolchain_noasserts_usr_bin" Name="bin" />
              <Directory Id="toolchain_noasserts_usr_include" Name="include" />
              <Directory Id="toolchain_noasserts_usr_lib" Name="lib">
                <Directory Id="toolchain_noasserts_usr_lib_clang" Name="clang" />
                <Directory Id="toolchain_noasserts_usr_lib_swift" Name="swift">
                  <Directory Id="toolchain_noasserts_usr_lib_swift_clang" Name="clang" />
                </Directory>
                <Directory Id="toolchain_noasserts_usr_lib_swift_static" Name="swift_static">
                  <Directory Id="toolchain_noasserts_usr_lib_swift_static_clang" Name="clang" />
                </Directory>
              </Directory>
              <Directory Id="toolchain_noasserts_usr_share" Name="share">
                <Directory Id="toolchain_noasserts_usr_share_docc" Name="docc">
                  <Directory Id="toolchain_noasserts_usr_share_docc_render" Name="render" />
                </Directory>
              </Directory>
            </Directory>
          </Directory>
        </Directory>
    </DirectoryRef>
  </Fragment>

  <!--
  Use RemoveFolderEx to clean up the empty subdirectories Windows Installer
  leaves when there are other directory siblings left behind, as happens when
  you have multiple versions of Swift installed with the versioned
  directories as children.
  -->
  <Fragment>
    <ComponentGroup Id="VersionedDirectoryCleanup" Directory="INSTALLROOT">
      <Component Id="VersionedDirectoryCleanupPlatforms">
        <RegistryValue Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="PlatformsVersioned" Value="[PlatformsVersioned]" />
        <util:RemoveFolderEx Property="PLATFORMSVERSIONED" Condition="PLATFORMSVERSIONED" />
      </Component>

      <Component Id="VersionedDirectoryCleanupRedistVersion">
        <RegistryValue Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="RedistVersion" Value="[RedistVersion]" />
        <util:RemoveFolderEx Property="REDISTVERSION" Condition="REDISTVERSION" />
      </Component>

      <Component Id="VersionedDirectoryCleanupRuntimes">
        <RegistryValue Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="RuntimesVersioned" Value="[RuntimesVersioned]" />
        <util:RemoveFolderEx Property="RUNTIMESVERSIONED" Condition="RUNTIMESVERSIONED" />
      </Component>

      <Component Id="VersionedDirectoryCleanupToolchains_asserts">
        <RegistryValue Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="ToolchainVersionedAsserts" Value="[ToolchainVersionedAsserts]" />
        <util:RemoveFolderEx Property="TOOLCHAINVERSIONEDASSERTS" Condition="TOOLCHAINVERSIONEDASSERTS" />
      </Component>

      <Component Id="VersionedDirectoryCleanupToolchains_noasserts">
        <RegistryValue Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="ToolchainVersionedNoAsserts" Value="[ToolchainVersionedNoAsserts]" />
        <util:RemoveFolderEx Property="TOOLCHAINVERSIONEDNOASSERTS" Condition="TOOLCHAINVERSIONEDNOASSERTS" />
      </Component>
    </ComponentGroup>

    <Property Id="PLATFORMSVERSIONED">
      <RegistrySearch Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="PlatformsVersioned" Type="directory" />
    </Property>

    <Property Id="REDISTVERSION">
      <RegistrySearch Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="RedistVersion" Type="directory" />
    </Property>

    <Property Id="RUNTIMESVERSIONED">
      <RegistrySearch Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="RuntimesVersioned" Type="directory" />
    </Property>

    <Property Id="TOOLCHAINVERSIONEDASSERTS">
      <RegistrySearch Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="ToolchainVersionedAsserts" Type="directory" />
    </Property>

    <Property Id="TOOLCHAINVERSIONEDNOASSERTS">
      <RegistrySearch Root="HKCU" Key="SOFTWARE\!(loc.ManufacturerName)\Installer\$(ProductVersion)\!(bind.Property.UpgradeCode)" Name="ToolchainVersionedNoAsserts" Type="directory" />
    </Property>
  </Fragment>

  <!--
  To support side-by-side installation for each minor release (the latest point release of each minor release),
  we need to use "old-school" `Upgrade`/`UpgradeVersion` authoring to get the upgrade version ranges, which
  also requires manually scheduling `RemoveExistingProducts`. To avoid duplication, the upgrade logic is
  authored here and referenced from the `Package` element of each package.
  -->
  <Fragment>
    <FeatureGroup Id="SideBySideUpgradeStrategy">
      <FeatureGroupRef Id="SideBySideUpgradeStrategyShared" />
    </FeatureGroup>

    <Upgrade Id="!(wix.SideBySidePackageUpgradeCode)">
      <UpgradeVersion Minimum="$(MajorMinorProductVersion).65535" IncludeMinimum="no" OnlyDetect="yes" Property="NEWERVERSIONDETECTED" />
      <UpgradeVersion Minimum="$(MajorMinorProductVersion).0" IncludeMinimum="yes" Maximum="$(NonSemVerProductVersion)" IncludeMaximum="yes" Property="OLDERVERSIONBEINGUPGRADED" />
    </Upgrade>
  </Fragment>

  <Fragment>
    <FeatureGroup Id="SideBySideUpgradeStrategyShared" />

    <Launch Message="!(loc.DowngradeError)" Condition="NOT NEWERVERSIONDETECTED" />

    <InstallExecuteSequence>
      <RemoveExistingProducts After="InstallValidate" />
    </InstallExecuteSequence>
  </Fragment>
</Wix>
